{"version":3,"sources":["components/app-header/app-header.jsx","components/search-panel/search-panel.jsx","components/post-status-filter/post-status-filter.jsx","components/post-list-item/star-fill.svg","components/post-list-item/trash-fill.svg","components/post-list-item/heart-fill.svg","components/post-list-item/post-list-item.jsx","components/post-list/post-list.jsx","components/post-add-form/post-add-form.jsx","data/data.js","components/app.jsx","index.js"],"names":["AppHeader","totalPosts","likedPosts","className","SearchPanel","Component","constructor","props","super","this","state","inputValue","changeInputHandler","bind","evt","setState","target","value","onChangeInput","render","type","name","placeholder","onChange","buttonsList","title","filterValue","PostStatusFilter","filter","onFilterSelect","buttonComponents","map","classList","onClick","Math","random","toFixed","PostListItem","important","like","onRemovePost","onToggleImportant","onToggleLiked","src","iconStar","alt","iconTrash","iconHeart","PostList","posts","elements","item","Object","keys","length","id","itemProps","PostAddForm","formInputValue","submitFormHandler","preventDefault","onSubmitAddPost","onSubmit","data","App","dataPostList","searchPanelInputValue","postStatusFilterValue","addPostHandler","removePostHandler","toggleImportantHandler","toggleLikedHandler","filterSelectHandler","body","newPost","findPost","postList","toLowerCase","indexOf","changeStateByProp","prop","index","findIndex","oldItem","newItem","newArr","splice","filterPosts","totalPostsCount","likedPostsCount","visiblePosts","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0c287eb.chunk.js","sourcesContent":["import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({ totalPosts, likedPosts }) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h2>UserName</h2>\n      <h3>\n        {totalPosts} posts, {likedPosts} liked\n      </h3>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import React, { Component } from 'react';\nimport './search-panel.css';\n\nclass SearchPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: '',\n    };\n\n    this.changeInputHandler = this.changeInputHandler.bind(this);\n  }\n\n  changeInputHandler(evt) {\n    this.setState(() => {\n      return {\n        inputValue: evt.target.value,\n      };\n    });\n\n    this.props.onChangeInput(evt.target.value);\n  }\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        className=\"form-control search-input\"\n        name=\"search-panel\"\n        placeholder=\"Find Post\"\n        value={this.state.inputValue}\n        onChange={this.changeInputHandler}\n      />\n    );\n  }\n}\n\nexport default SearchPanel;\n","import React from 'react';\nimport './post-status-filter.css';\n\nconst buttonsList = [\n  {\n    title: 'All',\n    filterValue: 'all',\n  },\n  {\n    title: 'Liked',\n    filterValue: 'like',\n  },\n];\n\nconst PostStatusFilter = ({ filter, onFilterSelect }) => {\n  const buttonComponents = buttonsList.map(({ title, filterValue }) => {\n    const activeFilter = filterValue === filter;\n    const classList = activeFilter ? 'btn-secondary' : 'btn-outline-secondary';\n\n    return (\n      <button\n        type=\"button\"\n        className={`btn ${classList}`}\n        key={title + Math.random().toFixed(10)}\n        onClick={() => onFilterSelect(filterValue)}\n      >\n        {title}\n      </button>\n    );\n  });\n\n  return <div className=\"btn-group\">{buttonComponents}</div>;\n};\n\nexport default PostStatusFilter;\n","export default __webpack_public_path__ + \"static/media/star-fill.f291972e.svg\";","export default __webpack_public_path__ + \"static/media/trash-fill.bec657fd.svg\";","export default __webpack_public_path__ + \"static/media/heart-fill.41ffa23d.svg\";","import React from 'react';\n\nimport iconStar from './star-fill.svg';\nimport iconTrash from './trash-fill.svg';\nimport iconHeart from './heart-fill.svg';\nimport './post-list-item.css';\n\nconst PostListItem = ({\n  title,\n  important,\n  like,\n  onRemovePost,\n  onToggleImportant,\n  onToggleLiked,\n}) => {\n  let classList = 'app-list-item d-flex justify-content-between';\n\n  if (important) classList += ' important';\n  if (like) classList += ' like';\n\n  return (\n    <li className={classList}>\n      <span className=\"app-list-item-label\" onClick={onToggleLiked}>\n        {title}\n      </span>\n      <div className=\"d-flex justify-content-center align-items-center\">\n        <button\n          type=\"button\"\n          className=\"btn-star btn-sm\"\n          onClick={onToggleImportant}\n        >\n          <img src={iconStar} alt=\"#\" />\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn-trash btn-sm\"\n          onClick={onRemovePost}\n        >\n          <img src={iconTrash} alt=\"#\" />\n        </button>\n        <button type=\"button\" className=\"btn-heart btn-sm\">\n          <img src={iconHeart} alt=\"#\" />\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default PostListItem;\n","import React from 'react';\n\nimport PostListItem from '../post-list-item/post-list-item';\nimport './post-list.css';\n\nconst PostList = ({\n  posts,\n  onRemovePost,\n  onToggleImportant,\n  onToggleLiked,\n}) => {\n  const elements = posts\n    .filter(item => {\n      return typeof item === 'object' && Object.keys(item).length > 0;\n    })\n    .map(item => {\n      const { id, ...itemProps } = item;\n\n      return (\n        <PostListItem\n          key={id}\n          {...itemProps}\n          onRemovePost={() => onRemovePost(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleLiked={() => onToggleLiked(id)}\n        />\n      );\n    });\n\n  return <ul className=\"app-list list-group\">{elements}</ul>;\n};\n\nexport default PostList;\n","import React, { Component } from 'react';\nimport './post-add-form.css';\n\nclass PostAddForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formInputValue: '',\n    };\n\n    this.changeInputHandler = this.changeInputHandler.bind(this);\n    this.submitFormHandler = this.submitFormHandler.bind(this);\n  }\n\n  changeInputHandler(evt) {\n    this.setState(() => {\n      return {\n        formInputValue: evt.target.value,\n      };\n    });\n  }\n\n  submitFormHandler(evt) {\n    evt.preventDefault();\n\n    if (!this.state.formInputValue) return;\n\n    this.props.onSubmitAddPost(this.state.formInputValue);\n    this.setState(() => {\n      return {\n        formInputValue: '',\n      };\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"bottom-panel d-flex\" onSubmit={this.submitFormHandler}>\n        <input\n          type=\"text\"\n          placeholder=\"What are you thinking right now?\"\n          className=\"form-control new-post-label\"\n          onChange={this.changeInputHandler}\n          value={this.state.formInputValue}\n        />\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Add Post\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default PostAddForm;\n","// data from virtual API\nexport const data = [\n  {\n    title: 'Very Short Text',\n    important: true,\n    like: false,\n    id: Math.random(),\n  },\n  {\n    title: 'Very Medium Title Record Text',\n    important: false,\n    like: true,\n    id: Math.random(),\n  },\n  {\n    title: 'Very very Long long Text Title Record',\n    important: false,\n    like: false,\n    id: Math.random(),\n  },\n];\n","import React, { Component } from 'react';\n\n// components\nimport AppHeader from './app-header/app-header';\nimport SearchPanel from './search-panel/search-panel';\nimport PostStatusFilter from './post-status-filter/post-status-filter';\nimport PostList from './post-list/post-list';\nimport PostAddForm from './post-add-form/post-add-form';\n\n// data from virtual API\nimport { data as dataPostList } from '../data/data';\n\n// css\nimport './app.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: dataPostList,\n      searchPanelInputValue: '',\n      postStatusFilterValue: 'all',\n    };\n\n    this.addPostHandler = this.addPostHandler.bind(this);\n    this.removePostHandler = this.removePostHandler.bind(this);\n    this.changeInputHandler = this.changeInputHandler.bind(this);\n    this.toggleImportantHandler = this.toggleImportantHandler.bind(this);\n    this.toggleLikedHandler = this.toggleLikedHandler.bind(this);\n    this.filterSelectHandler = this.filterSelectHandler.bind(this);\n  }\n\n  addPostHandler(body) {\n    const newPost = {\n      title: body,\n      important: false,\n      like: false,\n      id: Math.random(),\n    };\n\n    this.setState(({ data }) => {\n      return {\n        data: [...data, newPost],\n      };\n    });\n  }\n\n  removePostHandler(id) {\n    this.setState(({ data }) => {\n      const newData = [...data].filter(item => item.id !== id);\n\n      return {\n        data: newData,\n      };\n    });\n  }\n\n  findPost(postList, value) {\n    if (value.length === 0) return postList;\n\n    return postList.filter(item => {\n      return item.title.toLowerCase().indexOf(value.toLowerCase()) > -1;\n    });\n  }\n\n  changeInputHandler(value) {\n    this.setState(() => {\n      return {\n        searchPanelInputValue: value,\n      };\n    });\n  }\n\n  changeStateByProp(id, prop) {\n    this.setState(({ data }) => {\n      const index = data.findIndex(item => item.id === id);\n      const oldItem = data[index];\n      const newItem = { ...oldItem, [prop]: !oldItem[prop] };\n      const newArr = [...data];\n      newArr.splice(index, 1, newItem);\n\n      return {\n        data: newArr,\n      };\n    });\n  }\n\n  toggleImportantHandler(id) {\n    this.changeStateByProp(id, 'important');\n  }\n\n  toggleLikedHandler(id) {\n    this.changeStateByProp(id, 'like');\n  }\n\n  filterPosts(postList, filter) {\n    switch (filter) {\n      case 'like':\n        return postList.filter(item => item.like);\n\n      default:\n        return postList;\n    }\n  }\n  filterSelectHandler(filter) {\n    this.setState(() => {\n      return {\n        postStatusFilterValue: filter,\n      };\n    });\n  }\n\n  render() {\n    const { data, searchPanelInputValue, postStatusFilterValue } = this.state;\n\n    const totalPostsCount = data.length;\n    const likedPostsCount = [...data].filter(item => item.like).length;\n    const visiblePosts = this.filterPosts(\n      this.findPost(data, searchPanelInputValue),\n      postStatusFilterValue,\n    );\n\n    return (\n      <div className=\"app\">\n        <h1>React-favorite-list</h1>\n        <hr />\n\n        <AppHeader totalPosts={totalPostsCount} likedPosts={likedPostsCount} />\n\n        <div className=\"search-panel d-flex\">\n          <SearchPanel onChangeInput={this.changeInputHandler} />\n          <PostStatusFilter\n            filter={postStatusFilterValue}\n            onFilterSelect={this.filterSelectHandler}\n          />\n        </div>\n\n        <PostList\n          posts={visiblePosts}\n          onRemovePost={this.removePostHandler}\n          onToggleImportant={this.toggleImportantHandler}\n          onToggleLiked={this.toggleLikedHandler}\n        />\n        <PostAddForm onSubmitAddPost={this.addPostHandler} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}